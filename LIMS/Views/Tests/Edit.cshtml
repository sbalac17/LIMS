@model LIMS.Models.TestsEditViewModel
@{
    ViewBag.Title = "Edit test";
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm(new { test = Model.TestCode }))
{
    @Html.AntiForgeryToken()

    <div>
        @Html.ValidationSummary(true)
        
        <div class="form-group row">
            @Html.LabelFor(model => model.TestCode, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(m => m.TestCode)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Name, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Description, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Back to tests", "Index")
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
